//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ModelsAssist001Input: APIModel {

    public var request: String?

    public var resolvedCommands: [String: Value]?

    public init(request: String? = nil, resolvedCommands: [String: Value]? = nil) {
        self.request = request
        self.resolvedCommands = resolvedCommands
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        request = try container.decodeIfPresent("request")
        resolvedCommands = try container.decodeIfPresent("resolvedCommands")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(request, forKey: "request")
        try container.encodeIfPresent(resolvedCommands, forKey: "resolvedCommands")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ModelsAssist001Input else { return false }
      guard self.request == object.request else { return false }
      guard self.resolvedCommands == object.resolvedCommands else { return false }
      return true
    }

    public static func == (lhs: ModelsAssist001Input, rhs: ModelsAssist001Input) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
