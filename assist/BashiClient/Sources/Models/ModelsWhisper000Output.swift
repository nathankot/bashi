//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ModelsWhisper000Output: APIModel {

    public enum Model: String, Codable, Equatable, CaseIterable {
        case whisper000 = "whisper-000"
    }

    public var model: Model

    public var transcribed: String

    public init(model: Model, transcribed: String) {
        self.model = model
        self.transcribed = transcribed
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        model = try container.decode("model")
        transcribed = try container.decode("transcribed")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(model, forKey: "model")
        try container.encode(transcribed, forKey: "transcribed")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ModelsWhisper000Output else { return false }
      guard self.model == object.model else { return false }
      guard self.transcribed == object.transcribed else { return false }
      return true
    }

    public static func == (lhs: ModelsWhisper000Output, rhs: ModelsWhisper000Output) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
