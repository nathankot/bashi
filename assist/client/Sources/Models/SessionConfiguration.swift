//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class SessionConfiguration: APIModel {

    public enum DisabledBuiltinFunctions: String, Codable, Equatable, CaseIterable {
        case answer = "answer"
        case math = "math"
        case time = "time"
        case editProse = "editProse"
        case editCode = "editCode"
        case generateCode = "generateCode"
        case translate = "translate"
        case fail = "fail"
        case flushToSpeech = "flushToSpeech"
        case flushToText = "flushToText"
    }

    public var locale: String

    public var maxResponseTokens: Double

    public var bestOf: Double

    public var disabledBuiltinFunctions: [DisabledBuiltinFunctions]

    public init(locale: String, maxResponseTokens: Double, bestOf: Double, disabledBuiltinFunctions: [DisabledBuiltinFunctions]) {
        self.locale = locale
        self.maxResponseTokens = maxResponseTokens
        self.bestOf = bestOf
        self.disabledBuiltinFunctions = disabledBuiltinFunctions
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        locale = try container.decode("locale")
        maxResponseTokens = try container.decode("maxResponseTokens")
        bestOf = try container.decode("bestOf")
        disabledBuiltinFunctions = try container.decodeArray("disabledBuiltinFunctions")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(locale, forKey: "locale")
        try container.encode(maxResponseTokens, forKey: "maxResponseTokens")
        try container.encode(bestOf, forKey: "bestOf")
        try container.encode(disabledBuiltinFunctions, forKey: "disabledBuiltinFunctions")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? SessionConfiguration else { return false }
      guard self.locale == object.locale else { return false }
      guard self.maxResponseTokens == object.maxResponseTokens else { return false }
      guard self.bestOf == object.bestOf else { return false }
      guard self.disabledBuiltinFunctions == object.disabledBuiltinFunctions else { return false }
      return true
    }

    public static func == (lhs: SessionConfiguration, rhs: SessionConfiguration) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
