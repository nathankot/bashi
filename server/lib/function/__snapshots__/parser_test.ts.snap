export const snapshot = {};

snapshot[`someCall() 1`] = `
{
  args: [
  ],
  name: "someCall",
  type: "parsed",
}
`;

snapshot[`someCall('a', 111) 1`] = `
{
  args: [
    "a",
    111,
  ],
  name: "someCall",
  type: "parsed",
}
`;

snapshot[`someCall('a \\'ha\\'', 111) 1`] = `
{
  args: [
    "a 'ha'",
    111,
  ],
  name: "someCall",
  type: "parsed",
}
`;

snapshot[`someCall(\`a\`, 111) 1`] = `
{
  args: [
    "a",
    111,
  ],
  name: "someCall",
  type: "parsed",
}
`;

snapshot[`someCall(\`a \\\`ha\\\`\`, 111) 1`] = `
{
  args: [
    "a \`ha\`",
    111,
  ],
  name: "someCall",
  type: "parsed",
}
`;

snapshot[`someCall("a", 111) 1`] = `
{
  args: [
    "a",
    111,
  ],
  name: "someCall",
  type: "parsed",
}
`;

snapshot[`someCall("a \\"ha\\"", 111) 1`] = `
{
  args: [
    'a "ha"',
    111,
  ],
  name: "someCall",
  type: "parsed",
}
`;

snapshot[`someCall("a", 111,true) 1`] = `
{
  args: [
    "a",
    111,
    true,
  ],
  name: "someCall",
  type: "parsed",
}
`;

snapshot[`someCall("a", 111, false) 1`] = `
{
  args: [
    "a",
    111,
    false,
  ],
  name: "someCall",
  type: "parsed",
}
`;

snapshot[`someCall("a false true 123 b", 111, false) 1`] = `
{
  args: [
    "a false true 123 b",
    111,
    false,
  ],
  name: "someCall",
  type: "parsed",
}
`;

snapshot[`someCall(-123) 1`] = `
{
  args: [
    -123,
  ],
  name: "someCall",
  type: "parsed",
}
`;

snapshot[`some_call() 1`] = `
{
  args: [
  ],
  name: "some_call",
  type: "parsed",
}
`;

snapshot[`some-call() 1`] = `
{
  args: [
  ],
  name: "some-call",
  type: "parsed",
}
`;

snapshot[`SOMECALL() 1`] = `
{
  args: [
  ],
  name: "SOMECALL",
  type: "parsed",
}
`;

snapshot[`malformed("a" 1`] = `"undefined: Unable to consume token: <END-OF-FILE>"`;

snapshot[`someCall(-123.500) 1`] = `
{
  args: [
    -123.5,
  ],
  name: "someCall",
  type: "parsed",
}
`;

snapshot[`testing blah 1`] = `'{"index":8,"rowBegin":1,"columnBegin":9,"rowEnd":1,"columnEnd":13}: Unable to consume token: blah'`;

snapshot[`empty string 1`] = `"undefined: Unable to consume token: <END-OF-FILE>"`;
