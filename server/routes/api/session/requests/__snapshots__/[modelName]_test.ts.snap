export const snapshot = {};

snapshot[`POST /api/session/requests/assist-000: success 1`] = `
{
  functionCalls: [
    {
      args: [
        "mock response",
      ],
      argsParsed: [
        {},
      ],
      line: 'answer("mock response")',
      name: "answer",
      type: "parsed",
    },
    {
      args: [
        123,
      ],
      invalidReason: "unknown_function",
      line: "   unknownCall(123)",
      name: "unknownCall",
      type: "invalid",
    },
    {
      error: "<END-OF-FILE>: Unable to consume token: <END-OF-FILE>",
      line: "unparseable(",
      type: "parse_error",
    },
    {
      args: [
        "English",
        "should not work because disabled by conf",
      ],
      invalidReason: "unknown_function",
      line: 'translate("English", "should not work because disabled by conf")',
      name: "translate",
      type: "invalid",
    },
    {
      args: [
        "America/New_York",
      ],
      argsParsed: [
        {},
      ],
      line: 'time("America/New_York")',
      name: "time",
      returnValue: {
        type: "string",
        value: "12/19/2022, 3:41:10 AM",
      },
      type: "executed",
    },
    {
      args: [
        "not enough args",
      ],
      invalidReason: "invalid_arguments",
      line: 'sendEmail("not enough args")',
      name: "sendEmail",
      type: "invalid",
    },
    {
      args: [
        "blah@blah.com",
        "some subject",
        "some body",
      ],
      argsParsed: [
        {},
        {},
        {},
      ],
      line: 'sendEmail("blah@blah.com", "some subject", "some body")',
      name: "sendEmail",
      type: "parsed",
    },
    {
      args: [
      ],
      argsParsed: [
      ],
      line: "flushToSpeech()",
      name: "flushToSpeech",
      type: "parsed",
    },
    {
      args: [
        "in 5 days",
        "some reminder name",
      ],
      invalidReason: "unknown_function",
      line: 'reminder("in 5 days", "some reminder name")',
      name: "reminder",
      type: "invalid",
    },
  ],
  model: "assist-000",
  request: "whats the time in new york? email translate",
}
`;

snapshot[`POST /api/session/requests/assist-000: openai errors 1`] = `
{
  error: "internal server error",
}
`;

snapshot[`POST /api/session/requests/assist-000: empty request 1`] = `
{
  error: "request must not be empty",
}
`;

snapshot[`POST /api/session/requests/noop: noop model works 1`] = `
{
  model: "noop",
  result: "noop",
}
`;
