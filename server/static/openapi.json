{
  "openapi": "3.0.3",
  "info": {
    "title": "Bashi",
    "version": "0.1.0",
    "description": "TODO",
    "termsOfService": "TODO"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/sessions": {
      "post": {
        "operationId": "post_sessions",
        "summary": "TODO",
        "description": "TODO",
        "security": [
          {
            "account_number": []
          }
        ],
        "requestBody": {
          "description": "TODO",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "modelConfigurations"
                ],
                "properties": {
                  "modelConfigurations": {
                    "type": "object",
                    "properties": {
                      "assist-000": {
                        "$ref": "#/components/schemas/models_assist-000_Configuration"
                      },
                      "translate-000": {
                        "$ref": "#/components/schemas/models_translate-000_Configuration"
                      },
                      "code-000": {
                        "$ref": "#/components/schemas/models_code-000_Configuration"
                      },
                      "whisper-000": {
                        "$ref": "#/components/schemas/models_whisper-000_Configuration"
                      },
                      "passthrough-openai-000": {
                        "$ref": "#/components/schemas/models_passthrough-openai-000_Configuration"
                      },
                      "noop": {
                        "$ref": "#/components/schemas/models_noop_Configuration"
                      }
                    }
                  },
                  "configuration": {
                    "$ref": "#/components/schemas/SessionConfiguration"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TODO",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "session",
                    "builtinFunctions"
                  ],
                  "properties": {
                    "session": {
                      "$ref": "#/components/schemas/Session"
                    },
                    "builtinFunctions": {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/FunctionDefinition"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/session/requests/assist-000": {
      "post": {
        "operationId": "post_session_assist-000",
        "summary": "TODO",
        "description": "TODO",
        "security": [
          {
            "account_number": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          }
        ],
        "requestBody": {
          "description": "TODO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models_assist-000_Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TODO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models_assist-000_Output"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/session/requests/translate-000": {
      "post": {
        "operationId": "post_session_translate-000",
        "summary": "TODO",
        "description": "TODO",
        "security": [
          {
            "account_number": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          }
        ],
        "requestBody": {
          "description": "TODO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models_translate-000_Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TODO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models_translate-000_Output"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/session/requests/code-000": {
      "post": {
        "operationId": "post_session_code-000",
        "summary": "TODO",
        "description": "TODO",
        "security": [
          {
            "account_number": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          }
        ],
        "requestBody": {
          "description": "TODO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models_code-000_Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TODO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models_code-000_Output"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/session/requests/whisper-000": {
      "post": {
        "operationId": "post_session_whisper-000",
        "summary": "TODO",
        "description": "TODO",
        "security": [
          {
            "account_number": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          }
        ],
        "requestBody": {
          "description": "audio data in a conatiner format supported by ffmpeg",
          "content": {
            "audio/*": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TODO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models_whisper-000_Output"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/session/requests/passthrough-openai-000": {
      "post": {
        "operationId": "post_session_passthrough-openai-000",
        "summary": "TODO",
        "description": "TODO",
        "security": [
          {
            "account_number": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          }
        ],
        "requestBody": {
          "description": "TODO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models_passthrough-openai-000_Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TODO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models_passthrough-openai-000_Output"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/session/requests/noop": {
      "post": {
        "operationId": "post_session_noop",
        "summary": "TODO",
        "description": "TODO",
        "security": [
          {
            "account_number": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/session_id"
          }
        ],
        "requestBody": {
          "description": "TODO",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/models_noop_Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TODO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models_noop_Output"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "401": {
            "$ref": "#/components/responses/error"
          },
          "403": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "ArgumentParser": {
        "enum": [
          "naturalLanguageDateTime"
        ],
        "type": "string"
      },
      "ArgumentType": {
        "enum": [
          "string",
          "number",
          "boolean"
        ],
        "type": "string"
      },
      "FunctionDefinition": {
        "type": "object",
        "required": [
          "description",
          "args"
        ],
        "properties": {
          "description": {
            "type": "string"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name",
                "type"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "$ref": "#/components/schemas/ArgumentType"
                },
                "parse": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ArgumentParser"
                  }
                }
              }
            }
          },
          "triggerTokens": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FunctionCall": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "type",
              "line",
              "error"
            ],
            "properties": {
              "type": {
                "enum": [
                  "parse_error"
                ],
                "type": "string"
              },
              "line": {
                "type": "string"
              },
              "error": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "line",
              "type",
              "name",
              "args",
              "invalid_reason"
            ],
            "properties": {
              "line": {
                "type": "string"
              },
              "type": {
                "enum": [
                  "invalid"
                ],
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "args": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    }
                  ]
                }
              },
              "invalid_reason": {
                "oneOf": [
                  {
                    "enum": [
                      "unknown_function"
                    ],
                    "type": "string"
                  },
                  {
                    "enum": [
                      "invalid_arguments"
                    ],
                    "type": "string"
                  },
                  {
                    "enum": [
                      "failed_execution"
                    ],
                    "type": "string"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "line",
              "type",
              "name",
              "args"
            ],
            "properties": {
              "line": {
                "type": "string"
              },
              "type": {
                "enum": [
                  "parsed"
                ],
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "args": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    }
                  ]
                }
              },
              "argsParsed": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {}
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "line",
              "type",
              "name",
              "args",
              "returnValue"
            ],
            "properties": {
              "line": {
                "type": "string"
              },
              "type": {
                "enum": [
                  "executed"
                ],
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "args": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    }
                  ]
                }
              },
              "returnValue": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              }
            }
          }
        ]
      },
      "models_assist-000_Input": {
        "type": "object",
        "properties": {
          "request": {
            "type": "string"
          },
          "requestContext": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string"
              },
              "language": {
                "type": "string"
              }
            }
          }
        }
      },
      "models_assist-000_Output": {
        "type": "object",
        "required": [
          "model",
          "request",
          "functionCalls"
        ],
        "properties": {
          "model": {
            "enum": [
              "assist-000"
            ],
            "type": "string"
          },
          "request": {
            "type": "string"
          },
          "functionCalls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FunctionCall"
            }
          },
          "missingRequestContext": {
            "type": "object",
            "properties": {
              "text": {
                "enum": [
                  "string"
                ],
                "type": "string"
              },
              "language": {
                "enum": [
                  "string"
                ],
                "type": "string"
              }
            }
          }
        }
      },
      "models_assist-000_Configuration": {
        "type": "object",
        "required": [
          "model",
          "functions"
        ],
        "properties": {
          "model": {
            "enum": [
              "assist-000"
            ],
            "type": "string"
          },
          "functions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FunctionDefinition"
            }
          }
        }
      },
      "models_translate-000_Input": {
        "type": "object",
        "required": [
          "targetLanguage",
          "request"
        ],
        "properties": {
          "targetLanguage": {
            "type": "string"
          },
          "request": {
            "type": "string"
          }
        }
      },
      "models_translate-000_Output": {
        "type": "object",
        "required": [
          "model",
          "request",
          "result"
        ],
        "properties": {
          "model": {
            "enum": [
              "translate-000"
            ],
            "type": "string"
          },
          "request": {
            "type": "string"
          },
          "result": {
            "type": "string"
          }
        }
      },
      "models_translate-000_Configuration": {
        "type": "object",
        "required": [
          "model"
        ],
        "properties": {
          "model": {
            "enum": [
              "translate-000"
            ],
            "type": "string"
          }
        }
      },
      "models_code-000_Input": {
        "type": "object",
        "required": [
          "targetLanguage",
          "whatIsBeingGenerated",
          "request"
        ],
        "properties": {
          "targetLanguage": {
            "type": "string"
          },
          "whatIsBeingGenerated": {
            "type": "string"
          },
          "request": {
            "type": "string"
          }
        }
      },
      "models_code-000_Output": {
        "type": "object",
        "required": [
          "model",
          "targetLanguage",
          "request",
          "result"
        ],
        "properties": {
          "model": {
            "enum": [
              "code-000"
            ],
            "type": "string"
          },
          "targetLanguage": {
            "type": "string"
          },
          "request": {
            "type": "string"
          },
          "result": {
            "type": "string"
          }
        }
      },
      "models_code-000_Configuration": {
        "type": "object",
        "required": [
          "model"
        ],
        "properties": {
          "model": {
            "enum": [
              "code-000"
            ],
            "type": "string"
          }
        }
      },
      "models_whisper-000_Output": {
        "type": "object",
        "required": [
          "model",
          "transcribed"
        ],
        "properties": {
          "model": {
            "enum": [
              "whisper-000"
            ],
            "type": "string"
          },
          "transcribed": {
            "type": "string"
          }
        }
      },
      "models_whisper-000_Configuration": {
        "type": "object",
        "required": [
          "model"
        ],
        "properties": {
          "model": {
            "enum": [
              "whisper-000"
            ],
            "type": "string"
          }
        }
      },
      "models_passthrough-openai-000_Input": {
        "type": "object",
        "required": [
          "openAiModel",
          "request"
        ],
        "properties": {
          "openAiModel": {
            "type": "string"
          },
          "request": {
            "type": "string"
          }
        }
      },
      "models_passthrough-openai-000_Output": {
        "type": "object",
        "required": [
          "model",
          "openAiModel",
          "request",
          "result"
        ],
        "properties": {
          "model": {
            "enum": [
              "passthrough-openai-000"
            ],
            "type": "string"
          },
          "openAiModel": {
            "type": "string"
          },
          "request": {
            "type": "string"
          },
          "result": {
            "type": "string"
          }
        }
      },
      "models_passthrough-openai-000_Configuration": {
        "type": "object",
        "required": [
          "model"
        ],
        "properties": {
          "model": {
            "enum": [
              "passthrough-openai-000"
            ],
            "type": "string"
          }
        }
      },
      "models_noop_Input": {
        "type": "object",
        "required": [
          "request"
        ],
        "properties": {
          "request": {
            "enum": [
              "noop"
            ],
            "type": "string"
          }
        }
      },
      "models_noop_Output": {
        "type": "object",
        "required": [
          "model",
          "result"
        ],
        "properties": {
          "model": {
            "enum": [
              "noop"
            ],
            "type": "string"
          },
          "result": {
            "enum": [
              "noop"
            ],
            "type": "string"
          }
        }
      },
      "models_noop_Configuration": {
        "type": "object",
        "required": [
          "model"
        ],
        "properties": {
          "model": {
            "enum": [
              "noop"
            ],
            "type": "string"
          }
        }
      },
      "SessionConfiguration": {
        "type": "object",
        "required": [
          "locale",
          "maxResponseTokens",
          "bestOf",
          "disabledBuiltinFunctions"
        ],
        "properties": {
          "locale": {
            "type": "string"
          },
          "maxResponseTokens": {
            "type": "number"
          },
          "bestOf": {
            "type": "number"
          },
          "disabledBuiltinFunctions": {
            "type": "array",
            "items": {
              "enum": [
                "answer",
                "math",
                "time",
                "editProse",
                "editCode",
                "generateCode",
                "translate",
                "fail",
                "flushToSpeech",
                "flushToText"
              ],
              "type": "string"
            }
          }
        }
      },
      "Session": {
        "type": "object",
        "required": [
          "accountNumber",
          "sessionId",
          "expiresAt",
          "configuration",
          "modelConfigurations"
        ],
        "properties": {
          "accountNumber": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "configuration": {
            "$ref": "#/components/schemas/SessionConfiguration"
          },
          "modelConfigurations": {
            "type": "object",
            "properties": {
              "assist-000": {
                "$ref": "#/components/schemas/models_assist-000_Configuration"
              },
              "translate-000": {
                "$ref": "#/components/schemas/models_translate-000_Configuration"
              },
              "code-000": {
                "$ref": "#/components/schemas/models_code-000_Configuration"
              },
              "whisper-000": {
                "$ref": "#/components/schemas/models_whisper-000_Configuration"
              },
              "passthrough-openai-000": {
                "$ref": "#/components/schemas/models_passthrough-openai-000_Configuration"
              },
              "noop": {
                "$ref": "#/components/schemas/models_noop_Configuration"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "account_number": {
        "type": "http",
        "description": "Authenticate with your Account ID",
        "scheme": "Bearer"
      }
    },
    "parameters": {
      "session_id": {
        "in": "header",
        "name": "Session-ID",
        "required": true,
        "description": "A session_id retrieved from POST /sessions",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "error": {
        "description": "TODO",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}