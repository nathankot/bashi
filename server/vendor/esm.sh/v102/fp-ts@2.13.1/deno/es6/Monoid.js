/* esm.sh - esbuild bundle(fp-ts@2.13.1/es6/Monoid) deno production */
import{getMonoid as a}from"/v102/fp-ts@2.13.1/deno/es6/function.js";import{getMonoid as p}from"/v102/fp-ts@2.13.1/deno/es6/Endomorphism.js";import*as n from"/v102/fp-ts@2.13.1/deno/es6/internal.js";import*as t from"/v102/fp-ts@2.13.1/deno/es6/Semigroup.js";var m=function(o){return{concat:t.min(o).concat,empty:o.top}},i=function(o){return{concat:t.max(o).concat,empty:o.bottom}},c=function(o){return{concat:t.reverse(o).concat,empty:o.empty}},u=function(o){var e={};for(var r in o)n.has.call(o,r)&&(e[r]=o[r].empty);return{concat:t.struct(o).concat,empty:e}},v=function(){for(var o=[],e=0;e<arguments.length;e++)o[e]=arguments[e];return{concat:t.tuple.apply(t,o).concat,empty:o.map(function(r){return r.empty})}},g=function(o){return t.concatAll(o)(o.empty)},y={concat:t.semigroupVoid.concat,empty:void 0},f=v,l=u,S=c,s=i,M=m,A=g,h={concat:t.semigroupAll.concat,empty:!0},E={concat:t.semigroupAny.concat,empty:!1},F=a,P=function(){return c(p())},V={concat:t.semigroupString.concat,empty:""},b={concat:t.semigroupSum.concat,empty:0},D={concat:t.semigroupProduct.concat,empty:1};export{g as concatAll,A as fold,S as getDualMonoid,P as getEndomorphismMonoid,F as getFunctionMonoid,s as getJoinMonoid,M as getMeetMonoid,l as getStructMonoid,f as getTupleMonoid,i as max,m as min,h as monoidAll,E as monoidAny,D as monoidProduct,V as monoidString,b as monoidSum,y as monoidVoid,c as reverse,u as struct,v as tuple};
