/* esm.sh - esbuild bundle(fp-ts@2.13.1/es6/Set) deno production */
import{identity as h}from"/v102/fp-ts@2.13.1/deno/es6/function.js";import*as i from"/v102/fp-ts@2.13.1/deno/es6/ReadonlySet.js";import{separated as d}from"/v102/fp-ts@2.13.1/deno/es6/Separated.js";var k=i.getShow,q=i.getEq;function z(r){var a=f(r);return function(n){return function(e){var o=new Set;return e.forEach(function(t){var u=n(t);a(u,o)||o.add(u)}),o}}}function A(r){var a=f(r);return function(n){return function(e){var o=new Set;return e.forEach(function(t){n(t).forEach(function(u){a(u,o)||o.add(u)})}),o}}}function l(r){return function(a){for(var n=a.values(),e,o=new Set;!(e=n.next()).done;){var t=e.value;r(t)&&o.add(t)}return o}}function _(r){return function(a){for(var n=a.values(),e,o=new Set,t=new Set;!(e=n.next()).done;){var u=e.value;r(u)?o.add(u):t.add(u)}return d(t,o)}}function s(r){var a=f(r);return function(n,e){if(e===void 0){var o=s(r);return function(u){return o(n,u)}}if(p(n))return e;if(p(e))return n;var t=new Set(n);return e.forEach(function(u){a(u,t)||t.add(u)}),t}}function x(r){var a=f(r);return function(n,e){if(e===void 0){var o=x(r);return function(u){return o(u,n)}}if(p(n)||p(e))return new Set;var t=new Set;return n.forEach(function(u){a(u,e)&&t.add(u)}),t}}function L(r,a){return function(n){return function(e){for(var o=e.values(),t,u=new Set,c=new Set,g=f(r),m=f(a);!(t=o.next()).done;){var v=n(t.value);switch(v._tag){case"Left":g(v.left,u)||u.add(v.left);break;case"Right":m(v.right,c)||c.add(v.right);break}}return d(u,c)}}}function S(r){var a=f(r);return function(n,e){if(e===void 0){var o=S(r);return function(t){return o(t,n)}}return l(function(t){return!a(t,e)})(n)}}var w=function(r){return{concat:s(r)}},U=function(r){return{concat:w(r).concat,empty:new Set}},B=function(r){return{concat:x(r)}},C=function(r){return{concat:S(r)}},D=i.reduce,I=i.foldMap,j=i.reduceRight,F=function(r){return new Set([r])};function E(r){var a=f(r);return function(n){return function(e){if(a(n)(e))return e;var o=new Set(e);return o.add(n),o}}}var R=function(r){return function(a){return function(n){return l(function(e){return!r.equals(a,e)})(n)}}},G=function(r){var a=f(r),n=R(r),e=E(r);return function(o){return function(t){return(a(o,t)?n:e)(o)(t)}}},H=function(r){return function(a){for(var n=a.length,e=new Set,o=f(r),t=0;t<n;t++){var u=a[t];o(u,e)||e.add(u)}return e}},J=function(r){return b(r)(h)};function K(r,a){return function(n){var e=f(r),o=f(a),t=new Set,u=new Set;return n.forEach(function(c){switch(c._tag){case"Left":e(c.left,t)||t.add(c.left);break;case"Right":o(c.right,u)||u.add(c.right);break}}),d(t,u)}}function b(r){var a=f(r);return function(n){return function(e){var o=new Set;return e.forEach(function(t){var u=n(t);u._tag==="Some"&&!a(u.value,o)&&o.add(u.value)}),o}}}var N=new Set,p=function(r){return r.size===0},O=function(r){return r.size},P=i.some,Q=i.every,T=i.isSubset,f=i.elem,V=function(r){return function(a){var n=[];return a.forEach(function(e){return n.push(e)}),n.sort(r.compare)}},W=i.isSubset;export{A as chain,J as compact,S as difference,f as elem,N as empty,Q as every,l as filter,b as filterMap,I as foldMap,H as fromArray,C as getDifferenceMagma,q as getEq,B as getIntersectionSemigroup,k as getShow,U as getUnionMonoid,w as getUnionSemigroup,E as insert,x as intersection,p as isEmpty,T as isSubset,z as map,_ as partition,L as partitionMap,D as reduce,j as reduceRight,R as remove,K as separate,F as singleton,O as size,P as some,W as subset,V as toArray,G as toggle,s as union};
