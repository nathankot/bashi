/* esm.sh - esbuild bundle(fp-ts@2.13.1/es6/Const) deno production */
import{identity as e,pipe as a,unsafeCoerce as u}from"/v103/fp-ts@2.13.1/deno/es6/function.js";import{flap as v}from"/v103/fp-ts@2.13.1/deno/es6/Functor.js";var o=u;function b(r){return{show:function(t){return"make(".concat(r.show(t),")")}}}var s=e,A=e,y=e,L=e,h=e,w=e,B=e,C=e,E=e;function x(r){return{URI:n,_E:void 0,map:i,ap:function(t,p){return o(r.concat(t,p))}}}function S(r){var t=x(r);return{URI:n,_E:void 0,map:t.map,ap:t.ap,of:function(){return o(r.empty)}}}var f=function(r,t){return a(r,g(t))},i=function(r,t){return a(r,d(t))},c=function(r,t,p){return a(r,l(t,p))},m=function(r,t){return a(r,R(t))},g=function(){return u},d=function(){return u},l=function(r){return function(t){return o(r(t))}},R=function(r){return function(t){return o(r(t))}},n="Const",_={URI:n,map:i},k=v(_),q={URI:n,contramap:f},F={URI:n,bimap:c,mapLeft:m},H={URI:n,map:i,contramap:f,bimap:c,mapLeft:m};export{F as Bifunctor,q as Contravariant,_ as Functor,n as URI,l as bimap,H as const_,g as contramap,k as flap,S as getApplicative,x as getApply,E as getBooleanAlgebra,y as getBounded,s as getEq,C as getHeytingAlgebra,h as getMonoid,A as getOrd,B as getRing,L as getSemigroup,w as getSemiring,b as getShow,o as make,d as map,R as mapLeft};
